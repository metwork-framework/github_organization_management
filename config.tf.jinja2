{% set labels = "cat labels.json"|shell()|from_json %}
{% set releases = "cat releases.json"|shell()|from_json %}
{% set repositories = "cat repositories.json"|shell()|from_json %}

provider "github" {
  token        = "{{GITHUB_TOKEN}}"
  organization = "metwork-framework"
  version = "~> 3.0"
}

########################
##### ISSUE LABELS #####
########################

{% for label in labels %}
    {% for repo in repositories %}
        {% if 2 in repo.integration_levels %}
resource "github_issue_label" "{{label.name}}_on_{{repo.name}}" {
  repository = "{{repo.name}}"
  name = "{{label.title}}"
  color = "{{label.color}}"
}
        {% endif %}
    {% endfor %}
{% endfor %}

{% for release in releases.actives %}
    {% for repo in repositories %}
        {% if 4 in repo.integration_levels %}
resource "github_issue_label" "backport_{{release.alternate_title}}_on_{{repo.name}}" {
  repository = "{{repo.name}}"
  name = "backport-to-{{release.title}}"
  color = "eb6420"
}
        {% endif %}
    {% endfor %}
{% endfor %}


##############################
##### BRANCH PROTECTIONS #####
##############################
{% for release in releases.actives + releases.persistents %}
    {% for repo in repositories %}
        {% if 4 in repo.integration_levels %}
            {% if release.branch in repo.branches %}
                {% if release.branch != "master" %}
resource "github_branch_protection" "branch_{{release.alternate_title}}_on_{{repo.name}}" {
  repository = "{{repo.name}}"
  branch = "{{release.branch}}"
  enforce_admins = true
  required_status_checks {
    strict = true
    contexts = ["license/cla"]
  }
  required_pull_request_reviews {
    required_approving_review_count = 1
  }
}                    
                {% endif %}
            {% endif %}
        {% endif %}
    {% endfor %}
{% endfor %}
